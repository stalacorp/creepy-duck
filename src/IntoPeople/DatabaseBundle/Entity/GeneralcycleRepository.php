<?php

namespace IntoPeople\DatabaseBundle\Entity;

/**
 * GeneralcycleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GeneralcycleRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function getAmountCdpsByFormstatus($formstatus, $organization) {
    
        $query = $this->createQueryBuilder('g')
        ->select('count(f)')
        ->leftjoin('g.feedbackcycles','f')
        ->leftjoin('f.cdp','c')
        ->where('c.formstatus = :formstatus')
        ->andWhere('g.organization = :organization')
        ->andWhere('g.generalcyclestatus = :active')
        ->setParameter('formstatus', $formstatus)
        ->setParameter('organization', $organization)
        ->setParameter('active', 1);
    
        return $query->getQuery()->getSingleScalarResult();
    }
    
    
    public function getActiveCycleByOrganization($organization) {
               
        $qb = $this->createQueryBuilder('g')
        ->where('g.generalcyclestatus = 1')
        ->where('g.organization = :organization')
        ->setParameter('organization', $organization)
        ->getQuery();
        
        return $qb->setMaxResults(1)->getOneOrNullResult();
        
    }
    
    public function getFinishedCyclesByOrganization($organization) { 
               
        $qb = $this->createQueryBuilder('g')
        ->where('g.generalcyclestatus = :generalcyclestatus')
        ->andWhere('g.organization = :organization')
        ->setParameter('organization', $organization)
        ->setParameter('generalcyclestatus', $this->_em->getReference('IntoPeopleDatabaseBundle:Generalcyclestatus', 2))
        ->getQuery();
        
        return $qb->getResult();
        
    }
    
    public function getInactiveCyclesByOrganization($organization) {
         
        $qb = $this->createQueryBuilder('g')
        ->where('g.generalcyclestatus = :generalcyclestatus')
        ->andWhere('g.organization = :organization')
        ->setParameter('organization', $organization)
        ->setParameter('generalcyclestatus', $this->_em->getReference('IntoPeopleDatabaseBundle:Generalcyclestatus', 3))
        ->getQuery();
    
        return $qb->getResult();
    
    }
    
    public function checkYearByOrganization($organization, $year) {
         
        $qb = $this->createQueryBuilder('g')
        ->where('g.organization = :organization')
        ->andWhere('g.year = :year')
        ->setParameter('organization', $organization)
        ->setParameter('year', $year)
        ->getQuery();
    
        return $qb->getResult();
    
    }
    
}
